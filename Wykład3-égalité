class MyPolynomial:
  def __init__(self, *arg):
    self.__shadow = 'nie ma mnie'
    self.polynomial = list()
    if len(arg) == 0:
      self.polynomial.append(0)
    else:
      for x in range (len(arg)):
        self.polynomial.append(arg[x])
      
  def __str__ (self):
    result = str(self.polynomial[0])
    if len(self.polynomial) > 1:
      for x in range(1,len(self.polynomial)):
        if (self.polynomial[x] != 0):
          result = result + ' + ' + str(self.polynomial[x]) + 'x^'+str(x)
    return(result)

  def __eq__(self, other):
    return str(self) == other
    
  def __repr__(self):
    if len(self.polynomial) > 0:
      result = 'MyPolynomial(' + str(self.polynomial[0]) 
      if len(self.polynomial) > 1:
        for x in range(1,len(self.polynomial)):
          if not((self.polynomial[x] == self.polynomial[x-1]) and (self.polynomial[x] == 0)):
            result =  result + ', ' + str(self.polynomial[x])
    else:
      result = 'MyPolynomial(0'
    result = result + ')'
    return(result)





assert (MyPolynomial(5) == MyPolynomial(5, 1)) is False
assert MyPolynomial() == MyPolynomial(0)

